{"version":3,"sources":["render_image.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","createImage","type","container","document","createElement","classList","add","image","setAttribute","window","imageid","appendChild","addEventListener","location","href","this","getAttribute","isfound","wait","setInterval","fetch","headers","Content-Type","method","then","response","json","data","found","clearInterval","setTimeout","containerImage","querySelector","containerWait","toggle","catch","error","console","log"],"mappings":"CAAA,SAAUA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAkB,mBAATC,SAAqBA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,KAAK,MAAMK,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEX,EAAEG,IAAIS,YAAYb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAG,IAAIE,EAAED,EAAEI,GAAG,GAAGL,GAAG,OAAOI,EAAEF,GAAIF,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAkD,IAAI,IAA1CL,EAAkB,mBAATD,SAAqBA,QAAgBH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAAvb,EAA4ba,GAAG,SAAST,EAAQU,EAAOJ,GACvd,aAIA,SAASK,EAAYC,GACjB,IAAIC,EAAYC,SAASC,cAAc,OACvCF,EAAUG,UAAUC,IAAI,kBACxB,IAAIC,EAAQJ,SAASC,cAAc,OAOnC,OANAG,EAAMC,aAAa,MAAO,qBAAuBC,OAAOC,QAAU,IAAMT,EAAO,QAC/EM,EAAMF,UAAUC,IAAI,wBACpBJ,EAAUS,YAAYJ,GACtBA,EAAMK,iBAAiB,QAAS,WAC5BC,SAASC,KAAOC,KAAKC,aAAa,SAE/Bd,EAZXO,OAAOQ,SAAU,EAejBR,OAAOG,iBAAiB,OAAQ,WAC5B,IAAIM,EAAOC,YAAY,WACfV,OAAOC,SACPU,MAAM,MAAQX,OAAOC,QAAU,aAC3BW,SAAWC,eAAgB,qCAC3BC,OAAQ,QACTC,KAAK,SAAUC,GACd,OAAOA,EAASC,SACjBF,KAAK,SAAUG,GACI,OAAdA,EAAKC,QACLC,cAAcX,GACdY,WAAW,WACP,IAAIC,EAAiB5B,SAAS6B,cAAc,qBACxCC,EAAgB9B,SAAS6B,cAAc,oBAE3CD,EAAe1B,UAAU6B,OAAO,0BAChCD,EAAc5B,UAAU6B,OAAO,yBAE/BH,EAAepB,YAAYX,EAAY,UACvC+B,EAAepB,YAAYX,EAAY,UACvC+B,EAAepB,YAAYX,EAAY,WACxC,QAERmC,MAAM,SAAUC,GACfC,QAAQC,IAAIF,MAGrB,iBAGI","file":"render_image.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nwindow.isfound = false;\n\nfunction createImage(type) {\n    var container = document.createElement(\"div\");\n    container.classList.add(\"imagecontainer\");\n    var image = document.createElement(\"img\");\n    image.setAttribute(\"src\", \"/assets/processed/\" + window.imageid + \"-\" + type + \".png\");\n    image.classList.add(\"imagecontainer--item\");\n    container.appendChild(image);\n    image.addEventListener(\"click\", function () {\n        location.href = this.getAttribute(\"src\");\n    });\n    return container;\n}\n\nwindow.addEventListener(\"load\", function () {\n    var wait = setInterval(function () {\n        if (window.imageid) {\n            fetch(\"../\" + window.imageid + \"/isloaded\", {\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                method: \"GET\"\n            }).then(function (response) {\n                return response.json();\n            }).then(function (data) {\n                if (data.found == 'yes') {\n                    clearInterval(wait);\n                    setTimeout(function () {\n                        var containerImage = document.querySelector(\".container--image\");\n                        var containerWait = document.querySelector(\".container--wait\");\n\n                        containerImage.classList.toggle(\"container--image__hide\");\n                        containerWait.classList.toggle(\"container--wait__hide\");\n\n                        containerImage.appendChild(createImage('trans'));\n                        containerImage.appendChild(createImage('white'));\n                        containerImage.appendChild(createImage('black'));\n                    }, 500);\n                }\n            }).catch(function (error) {\n                console.log(error);\n            });\n        }\n    }, 500);\n});\n\n},{}]},{},[1]);\n"]}